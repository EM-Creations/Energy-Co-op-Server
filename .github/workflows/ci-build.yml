name: CI Build
run-name: CI build by ${{ github.actor }} ðŸš€
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  actions: read
  checks: write
  contents: read
  issues: read
  packages: write
  pull-requests: write
  statuses: read
  security-events: write

env:
  IMAGE_NAME: energycoop-server
  IMAGE_TAGS: v1 latest ${{ github.sha }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository }}
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}

jobs:
  Build-With-Tests-Linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

        ### Start JaCoco-Code-Coverage-Report Job ###
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: build/reports/test/jacocoTestReport.xml
          coverage_report_name: Code Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: true
          minimum_coverage: 80
          fail_below_threshold: true
          publish_only_summary: false

          # Publish Coverage Job Summary
      - name: JaCoCo Code Coverage Report
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY
      ### End JaCoco-Code-Coverage-Report Job ###

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: build-${{ github.sha }}
          path: |
            build/libs/
            */coverage-results.md
          retention-days: 1

  OCI-Image:
    runs-on: ubuntu-latest
    needs:
      - Build-With-Tests-Linux

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: |
            build/libs/
            */coverage-results.md

      - name: Debug
        run: |
          ls
          ls build/
          ls build/libs/

      - name: Buildah Action
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          oci: true
          containerfiles: |
            ./Containerfile

      - name: downcase IMAGE_REGISTRY
        run: |
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >>${GITHUB_ENV}

      - name: Push to GitHub Container Registry
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-ghcr.outputs.registry-paths }}"

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
